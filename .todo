//Description:
	The Simple RPGS Game Engine is a practice for improving software development skill including Unit Testing, JavaScript.

//Tool:
	Text Editor: Sublime Text 2
	Environment: Node
	Language: Java Script
	Unit Testing: Mocha, Chai
	VCS: Github


//TODO 1: Scope
1. Character creations
	1.1 a character has a name(string)
	1.2 a character has 3 status 
		:including
			- str 	(integer)
			- agi 	(integer)
			- int 	(integer)
	1.3 a character has properties
		:including
			- level			(integer)
			- exp			(float)
			- attk 			(float)
			- magic attk 	(float)
			- attk speed 	(float)
			- def 			(float)
			- hp 			(integer)
			- mp 			(integer)
	1.4 the properties are calculated from the status with rules
		:rule_1
			- level		 = exp / 1000
			- attk 		 = (str * 2.2) 	+ (agi * 0.8) 	+ (item_weight * 0.4) + item_attk 
			- magic attk = (int * 2.4) 	+ item_magic_attk
			- attk speed = (agi * 1.8)	- (item_weight * 0.2)
			- def 		 = (agi * 1.1) 	+ (int * 1.1) 	+ item_def
			- hp 		 = (level * 12) + item_hp
			- mp 		 = (level * 6) 	+ (int * 5) 	+ item_mp

2. Character growth(level up)
	To gain some exp there are 2 way
		ways:
			- give amount of exp directly to a player
			- a player get some exp from killing a monster 

3. Item
	3.1 a item has its name(string)
	3.2 a item has a unique id(integer) than the other
	3.3 a item has ... properties including
		:including
			- item_attk
			- item_magic_attk
			- item_weight
			- item_def
			- item_hp
			- item_mp

4. Invontory
	4.1. for each character has their own inventory
	4.2. a inventory used to store items and has a property called 'maximum_weight'
	4.3. there is a function to collect a specified item in the inventory
	4.4  there is a function to drop a specified item from the inventory
	4.5. the maximum_weight limit items to be stored by the rule
		:rule
			the sum of every item's weight in the inventory must not over than the maximum_weight!
			ex. 
				collectItem(item, inventory) {
					var sumOfWeight = inventory.currentWeight + item.weight;
					return sumOfWeight > inventory.maximumWeight;
				}

















